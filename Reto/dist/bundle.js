(()=>{"use strict";class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){return n=this,e=void 0,s=function*(){const n=yield(e=void 0,t=void 0,s=void 0,c=function*(){const n=yield fetch("https://rickandmortyapi.com/api/character"),e=yield n.json();return console.log(e.results),e.results},new(s||(s=Promise))((function(n,o){function i(n){try{r(c.next(n))}catch(n){o(n)}}function a(n){try{r(c.throw(n))}catch(n){o(n)}}function r(e){var t;e.done?n(e.value):(t=e.value,t instanceof s?t:new s((function(n){n(t)}))).then(i,a)}r((c=c.apply(e,t||[])).next())})));var e,t,s,c;this.render(n)},new((t=void 0)||(t=Promise))((function(c,o){function i(n){try{r(s.next(n))}catch(n){o(n)}}function a(n){try{r(s.throw(n))}catch(n){o(n)}}function r(n){var e;n.done?c(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(i,a)}r((s=s.apply(n,e||[])).next())}));var n,e,t,s}render(n){if(this.shadowRoot){const e=n.map((({name:n,image:e,gender:t,species:s,status:c})=>`\n            <link rel="stylesheet" href="../src/style.css">\n            <section id= "container">\n                <div class="section">\n                <img src="${e}">\n                </div>\n                <div class="section">${n}</div>\n                <div class="section">${t}</div>\n                <div class="section">${s}</div>\n                <div class="section">${c}</div>\n            </section>\n            `));this.shadowRoot.innerHTML=`\n            ${e.join("")}\n        `}}}customElements.define("comp-card",n);class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render()}render(){this.shadowRoot&&(this.shadowRoot.innerHTML='\n                <link rel="stylesheet" href="../src/components/card/style.css">\n\n                    <comp-card></comp-card>\n                ')}}customElements.define("comp-app",e)})();